// Code generated by protoc-gen-go. DO NOT EDIT.
// source: register_pnid_rpc.proto

package grpc_account

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegisterPNIDRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	PasswordConfirm      string   `protobuf:"bytes,4,opt,name=password_confirm,json=passwordConfirm,proto3" json:"password_confirm,omitempty"`
	HCaptchaResponse     string   `protobuf:"bytes,5,opt,name=h_captcha_response,json=hCaptchaResponse,proto3" json:"h_captcha_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterPNIDRequest) Reset()         { *m = RegisterPNIDRequest{} }
func (m *RegisterPNIDRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterPNIDRequest) ProtoMessage()    {}
func (*RegisterPNIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbb736e09582c4b0, []int{0}
}

func (m *RegisterPNIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterPNIDRequest.Unmarshal(m, b)
}
func (m *RegisterPNIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterPNIDRequest.Marshal(b, m, deterministic)
}
func (m *RegisterPNIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterPNIDRequest.Merge(m, src)
}
func (m *RegisterPNIDRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterPNIDRequest.Size(m)
}
func (m *RegisterPNIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterPNIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterPNIDRequest proto.InternalMessageInfo

func (m *RegisterPNIDRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegisterPNIDRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *RegisterPNIDRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *RegisterPNIDRequest) GetPasswordConfirm() string {
	if m != nil {
		return m.PasswordConfirm
	}
	return ""
}

func (m *RegisterPNIDRequest) GetHCaptchaResponse() string {
	if m != nil {
		return m.HCaptchaResponse
	}
	return ""
}

func init() {
	proto.RegisterType((*RegisterPNIDRequest)(nil), "account.RegisterPNIDRequest")
}

func init() {
	proto.RegisterFile("register_pnid_rpc.proto", fileDescriptor_bbb736e09582c4b0)
}

var fileDescriptor_bbb736e09582c4b0 = []byte{
	// 204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8f, 0x3f, 0x6f, 0xc2, 0x30,
	0x10, 0x47, 0x95, 0xb6, 0xe9, 0x1f, 0x2f, 0x49, 0xdd, 0x4a, 0xb5, 0x3a, 0x55, 0x9d, 0x5a, 0xa9,
	0x4a, 0x07, 0x46, 0x36, 0xc2, 0xc2, 0x82, 0x90, 0x47, 0x16, 0xcb, 0x38, 0x47, 0x62, 0x89, 0xd8,
	0xe6, 0xec, 0x88, 0x2f, 0xc7, 0x87, 0x43, 0xd8, 0x09, 0xdb, 0xfd, 0xde, 0x7b, 0xcb, 0x91, 0x0f,
	0x84, 0x56, 0xfb, 0x00, 0x28, 0x9c, 0xd1, 0x8d, 0x40, 0xa7, 0x2a, 0x87, 0x36, 0x58, 0xfa, 0x24,
	0x95, 0xb2, 0x83, 0x09, 0xdf, 0xe7, 0x8c, 0xbc, 0xf1, 0x31, 0xda, 0xac, 0x57, 0x4b, 0x0e, 0xc7,
	0x01, 0x7c, 0xa0, 0xef, 0x24, 0x87, 0x5e, 0xea, 0x03, 0xcb, 0xbe, 0xb2, 0x9f, 0x17, 0x9e, 0x06,
	0xfd, 0x24, 0xcf, 0x83, 0x07, 0x34, 0xb2, 0x07, 0x76, 0x17, 0xc5, 0x6d, 0x5f, 0x9d, 0x93, 0xde,
	0x9f, 0x2c, 0x36, 0xec, 0x3e, 0xb9, 0x69, 0xd3, 0x5f, 0x52, 0x4e, 0xb7, 0x50, 0xd6, 0xec, 0x35,
	0xf6, 0xec, 0x21, 0x36, 0xc5, 0xc4, 0xeb, 0x84, 0xe9, 0x1f, 0xa1, 0x9d, 0x50, 0xd2, 0x05, 0xd5,
	0x49, 0x81, 0xe0, 0x9d, 0x35, 0x1e, 0x58, 0x1e, 0xe3, 0xb2, 0xab, 0x93, 0xe0, 0x23, 0x5f, 0xbc,
	0x6e, 0x8b, 0xea, 0x7f, 0xde, 0xa2, 0x53, 0x62, 0xfc, 0x68, 0xf7, 0x18, 0x3f, 0x9c, 0x5d, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x15, 0xc4, 0xbd, 0xeb, 0xfc, 0x00, 0x00, 0x00,
}

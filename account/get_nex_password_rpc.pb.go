// Code generated by protoc-gen-go. DO NOT EDIT.
// source: get_nex_password_rpc.proto

package grpc_account

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetNEXPasswordRequest struct {
	Pid                  uint32   `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNEXPasswordRequest) Reset()         { *m = GetNEXPasswordRequest{} }
func (m *GetNEXPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*GetNEXPasswordRequest) ProtoMessage()    {}
func (*GetNEXPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e6a4a2d297b3d59, []int{0}
}

func (m *GetNEXPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNEXPasswordRequest.Unmarshal(m, b)
}
func (m *GetNEXPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNEXPasswordRequest.Marshal(b, m, deterministic)
}
func (m *GetNEXPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNEXPasswordRequest.Merge(m, src)
}
func (m *GetNEXPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_GetNEXPasswordRequest.Size(m)
}
func (m *GetNEXPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNEXPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNEXPasswordRequest proto.InternalMessageInfo

func (m *GetNEXPasswordRequest) GetPid() uint32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

type GetNEXPasswordResponse struct {
	Password             string   `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNEXPasswordResponse) Reset()         { *m = GetNEXPasswordResponse{} }
func (m *GetNEXPasswordResponse) String() string { return proto.CompactTextString(m) }
func (*GetNEXPasswordResponse) ProtoMessage()    {}
func (*GetNEXPasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e6a4a2d297b3d59, []int{1}
}

func (m *GetNEXPasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNEXPasswordResponse.Unmarshal(m, b)
}
func (m *GetNEXPasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNEXPasswordResponse.Marshal(b, m, deterministic)
}
func (m *GetNEXPasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNEXPasswordResponse.Merge(m, src)
}
func (m *GetNEXPasswordResponse) XXX_Size() int {
	return xxx_messageInfo_GetNEXPasswordResponse.Size(m)
}
func (m *GetNEXPasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNEXPasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNEXPasswordResponse proto.InternalMessageInfo

func (m *GetNEXPasswordResponse) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func init() {
	proto.RegisterType((*GetNEXPasswordRequest)(nil), "account.GetNEXPasswordRequest")
	proto.RegisterType((*GetNEXPasswordResponse)(nil), "account.GetNEXPasswordResponse")
}

func init() {
	proto.RegisterFile("get_nex_password_rpc.proto", fileDescriptor_3e6a4a2d297b3d59)
}

var fileDescriptor_3e6a4a2d297b3d59 = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4a, 0x4f, 0x2d, 0x89,
	0xcf, 0x4b, 0xad, 0x88, 0x2f, 0x48, 0x2c, 0x2e, 0x2e, 0xcf, 0x2f, 0x4a, 0x89, 0x2f, 0x2a, 0x48,
	0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4f, 0x4c, 0x4e, 0xce, 0x2f, 0xcd, 0x2b, 0x51,
	0xd2, 0xe4, 0x12, 0x75, 0x4f, 0x2d, 0xf1, 0x73, 0x8d, 0x08, 0x80, 0x2a, 0x0a, 0x4a, 0x2d, 0x2c,
	0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe0, 0x62, 0x2e, 0xc8, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0,
	0x0d, 0x02, 0x31, 0x95, 0x4c, 0xb8, 0xc4, 0xd0, 0x95, 0x16, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a,
	0x49, 0x71, 0x71, 0xc0, 0xec, 0x00, 0x6b, 0xe0, 0x0c, 0x82, 0xf3, 0x9d, 0x04, 0xa3, 0xf8, 0xf5,
	0xf4, 0xad, 0xd3, 0x8b, 0x0a, 0x92, 0xe3, 0xa1, 0x76, 0x26, 0xb1, 0x81, 0xdd, 0x60, 0x0c, 0x08,
	0x00, 0x00, 0xff, 0xff, 0x2f, 0xad, 0x4e, 0x40, 0xa1, 0x00, 0x00, 0x00,
}

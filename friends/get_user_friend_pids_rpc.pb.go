// Code generated by protoc-gen-go. DO NOT EDIT.
// source: get_user_friend_pids_rpc.proto

package grpc_friends

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetUserFriendPIDsRequest struct {
	Pid                  uint32   `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserFriendPIDsRequest) Reset()         { *m = GetUserFriendPIDsRequest{} }
func (m *GetUserFriendPIDsRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserFriendPIDsRequest) ProtoMessage()    {}
func (*GetUserFriendPIDsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_75bb2cf203a547f4, []int{0}
}

func (m *GetUserFriendPIDsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserFriendPIDsRequest.Unmarshal(m, b)
}
func (m *GetUserFriendPIDsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserFriendPIDsRequest.Marshal(b, m, deterministic)
}
func (m *GetUserFriendPIDsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserFriendPIDsRequest.Merge(m, src)
}
func (m *GetUserFriendPIDsRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserFriendPIDsRequest.Size(m)
}
func (m *GetUserFriendPIDsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserFriendPIDsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserFriendPIDsRequest proto.InternalMessageInfo

func (m *GetUserFriendPIDsRequest) GetPid() uint32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

type GetUserFriendPIDsResponse struct {
	Pids                 []uint32 `protobuf:"varint,1,rep,packed,name=pids,proto3" json:"pids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserFriendPIDsResponse) Reset()         { *m = GetUserFriendPIDsResponse{} }
func (m *GetUserFriendPIDsResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserFriendPIDsResponse) ProtoMessage()    {}
func (*GetUserFriendPIDsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_75bb2cf203a547f4, []int{1}
}

func (m *GetUserFriendPIDsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserFriendPIDsResponse.Unmarshal(m, b)
}
func (m *GetUserFriendPIDsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserFriendPIDsResponse.Marshal(b, m, deterministic)
}
func (m *GetUserFriendPIDsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserFriendPIDsResponse.Merge(m, src)
}
func (m *GetUserFriendPIDsResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserFriendPIDsResponse.Size(m)
}
func (m *GetUserFriendPIDsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserFriendPIDsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserFriendPIDsResponse proto.InternalMessageInfo

func (m *GetUserFriendPIDsResponse) GetPids() []uint32 {
	if m != nil {
		return m.Pids
	}
	return nil
}

func init() {
	proto.RegisterType((*GetUserFriendPIDsRequest)(nil), "friends.GetUserFriendPIDsRequest")
	proto.RegisterType((*GetUserFriendPIDsResponse)(nil), "friends.GetUserFriendPIDsResponse")
}

func init() {
	proto.RegisterFile("get_user_friend_pids_rpc.proto", fileDescriptor_75bb2cf203a547f4)
}

var fileDescriptor_75bb2cf203a547f4 = []byte{
	// 148 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4b, 0x4f, 0x2d, 0x89,
	0x2f, 0x2d, 0x4e, 0x2d, 0x8a, 0x4f, 0x2b, 0xca, 0x4c, 0xcd, 0x4b, 0x89, 0x2f, 0xc8, 0x4c, 0x29,
	0x8e, 0x2f, 0x2a, 0x48, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x08, 0x17, 0x2b,
	0xe9, 0x70, 0x49, 0xb8, 0xa7, 0x96, 0x84, 0x16, 0xa7, 0x16, 0xb9, 0x81, 0x45, 0x02, 0x3c, 0x5d,
	0x8a, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x04, 0xb8, 0x98, 0x0b, 0x32, 0x53, 0x24,
	0x18, 0x15, 0x18, 0x35, 0x78, 0x83, 0x40, 0x4c, 0x25, 0x7d, 0x2e, 0x49, 0x2c, 0xaa, 0x8b, 0x0b,
	0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x84, 0xb8, 0x58, 0x40, 0xb6, 0x48, 0x30, 0x2a, 0x30, 0x6b, 0xf0,
	0x06, 0x81, 0xd9, 0x4e, 0x82, 0x51, 0xfc, 0x7a, 0xfa, 0xd6, 0xe9, 0x45, 0x05, 0xc9, 0x50, 0x87,
	0x14, 0x27, 0xb1, 0x81, 0x5d, 0x60, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x57, 0xe7, 0x24, 0x33,
	0xa3, 0x00, 0x00, 0x00,
}
